// Регулярные выражения

// Упражнение 1 Регулярный гольф

/*«Гольфом» в коде называют игру, где нужно выразить
заданную программу минимальным количеством
символов. Регулярный гольф – практическое упражнение
по написанию наименьших возможных регулярок для
поиска заданного шаблона, и только его.
Для каждой из подстрочек напишите регулярку для
проверки их нахождения в строке. Регулярка должна
находить только эти указанные подстроки. Не волнуйтесь
насчёт границ слов, если это не упомянуто особо. Когда у
вас получится работающая регулярка, попробуйте её
уменьшить.
— car и cat 
— pop и prop 
— ferret, ferry, и ferrari 
— Любое слово, заканчивающееся на ious 
— Пробел, за которым идёт точка, запятая, двоеточие или точка с запятой. 
— Слово длинее шести букв 
— Слово без букв e*/

verify(/ca[rt]/,
	["my car", "bad cats"],
	["camper", "high art"]);
verify(/pr?op/,
	["pop culture", "mad props"],
	["plop"]);
verify(/ferr(et|y|ari)/,
	["ferret", "ferry", "ferrari"],
	["ferrum", "transfer A"]);
verify(/ious\b/,
	["how delicious", "spacious room"],
	["ruinous", "consciousness"]);
verify(/\s[.,:;]/,
	["bad punctuation ."],
	["escape the dot"]);
verify(/\w{7,}/,
	["hottentottententen"],
	["no", "hotten totten tenten"]);
verify(/\b[a-df-z]+\b/i,
	["red platypus", "wobbling nest"],
	["earth bed", "learning ape"]);

function verify(regexp, yes, no) {
// Ignore unfinished exercises
	if (regexp.source == "...") return;
	yes.forEach(function(s) {
		if (!regexp.test(s))
			console.log("Не нашлось '" + s + "'");
	});
	no.forEach(function(s) {
		if (regexp.test(s))
			console.log("Неожиданное вхождение '" + s + "'");
	});
}


// Упражнение 2 Кавычки в тексте

/*Допустим, вы написали рассказ, и везде для обозначения
диалогов использовали одинарные кавычки. Теперь вы
хотите заменить кавычки диалогов на двойные, и
оставить одинарные в сокращениях слов типа aren’t.
Придумайте шаблон, различающий два этих
использования кавычек, и напишите вызов метода
replace, который производит замену.*/

var text = "'I'm good developer', 'but you don't think so'";

console.log(text.replace(/(^|\W)'|'(\W|$)/g, '$1"$2'));


// Упражнение 3 Снова числа

/*Последовательности цифр можно найти простой
регуляркой /\d+/.
Напишите выражение, находящее только числа,
записанные в стиле JavaScript. Оно должно
поддерживать возможный минус или плюс перед числом,
десятичную точку, и экспоненциальную запись 5e-3 или
1E10 – опять-таки с возможными плюсом или минусом.
Также заметьте, что до или после точки не обязательно
могут стоять цифры, но при этом число не может
состоять из одной точки. То есть, .5 или 5. – допустимые
числа, а одна точка сама по себе – нет.*/



var number = /^(\+|-|)(\d+(\.\d*)?|\.\d+)([eE](\+|-|)\d+)?$/;

// Tests:
["1", "-1", "+15", "1.55", ".5", "5.", "1.3e2", "1E-4",
	"1e+12"].forEach(function(s) {
		if (!number.test(s))
			console.log("Не нашла '" + s + "'");
});

["1a", "+-1", "1.2.3", "1+1", "1e4.5", ".5.", "1f5",
	"."].forEach(function(s) {
		if (number.test(s))
			console.log("Неправильно принято '" + s + "'");
});